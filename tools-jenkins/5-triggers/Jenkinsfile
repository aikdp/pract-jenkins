// Eg1: every fifteen minutes (perhaps at :07, :22, :37, :52)	
// triggers{ cron('H/15 * * * *') }

// Eg2: every ten minutes in the first half of every hour (three times, perhaps at :04, :14, :24)
// triggers{ cron('H(0-29)/10 * * * *') }

// Eg:3 once every two hours at 45 minutes past the hour starting at 9:45 AM and finishing at 3:45 PM every weekday.
// triggers{ cron('45 9-16/2 * * 1-5') }

// Eg4: once in every two hours slot between 9 AM and 5 PM every weekday (perhaps at 10:38 AM, 12:38 PM, 2:38 PM, 4:38 PM)
// triggers{ cron('H H(9-16)/2 * * 1-5') }

// Eg5: once a day on the 1st and 15th of every month except December
// triggers{ cron('H H 1,15 1-11 *') }


pipeline{
    agent any
    options{
        disableConcurrentBuilds() 
        retry(2)    //it will retry 2 times, if pipeline failure
        timeout(time: 10, unit: 'MINUTES') //pipeline will stop/abort when specified time period
    }
    parameters {
    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

    text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

    booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

    choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

    password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    stages{
        stage("Build"){
            steps{
                echo "echo hello world"
            }
        }
        stage("Test"){
            steps{
                echo "I am from Test stage"
            }
        }
        stage("Deploy"){
            steps{
                echo "I am from Deploy stage"
            }
        }
        stage("Parameters"){
            steps{
                echo "Hello ${param.PERSON}"    //we can dynamically pass parameters
                echo "Tell me you biograpghy: ${params.BIOGRAPHY}"
                echo "Select Toggle is: ${params.TOGGLE}"
                echo "Select choices: ${params.CHOICE}"
                echo "Enter your Password: ${params.PASSWORD}"
            }
        }
    }
    //post build section
   post{
     always{
        echo "I always run when pipeline running"
        deleteDir()    //Cleans up workspace after every build.
    }
    failure{
        echo "Pipeline is FAILED"
    }
    success {
        echo "Pipeline is Success"
    }
    regression {
        echo "It will execute if Pipeline status is failure, unstable, or aborted and the previous run was successful"
    }
   }
}
